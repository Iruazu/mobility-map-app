/**
 * UIÂà∂Âæ°„Çµ„Éº„Éì„ÇπÔºàÊîπÂñÑÁâàÔºâ
 * ROS2Áµ±ÂêàÂØæÂøú„ÄÅÈÄöÁü•„Ç∑„Çπ„ÉÜ„É†Âº∑Âåñ
 */
export class UIService {
    constructor(robotService, mapService) {
        this.robotService = robotService; // ÂàùÊúüÂåñÊôÇ„ÅØnull„ÅÆÂèØËÉΩÊÄß„ÅÇ„Çä
        this.mapService = mapService;
        this.notificationQueue = [];
        this.isProcessingQueue = false;
        
        this.setupGlobalHandlers();
        this.initializeNotificationSystem();
    }

    /**
     * RobotService„ÅÆÂèÇÁÖß„ÇíÂæå„Åã„ÇâË®≠ÂÆöÔºàmain.js„ÅÆÂàùÊúüÂåñÈ†ÜÂ∫èÂïèÈ°å„ÇíËß£Ê±∫Ôºâ
     * @param {RobotService} robotService
     */
    setRobotService(robotService) {
        this.robotService = robotService;
        console.log("‚úÖ UIService: RobotService„ÅÆÂèÇÁÖß„ÇíËß£Ê±∫„Åó„Åæ„Åó„Åü");
    }

    /**
     * ÈÄöÁü•„Ç∑„Çπ„ÉÜ„É†„ÇíÂàùÊúüÂåñ
     */
    initializeNotificationSystem() {
        // ÈÄöÁü•„Ç≥„É≥„ÉÜ„Éä„Çí‰ΩúÊàê
        if (!document.getElementById('notification-container')) {
            const container = document.createElement('div');
            container.id = 'notification-container';
            container.className = 'fixed top-4 right-4 z-50 space-y-2';
            document.body.appendChild(container);
        }
    }

    /**
     * „Ç∞„É≠„Éº„Éê„É´Èñ¢Êï∞„Éè„É≥„Éâ„É©„Éº„ÇíË®≠ÂÆö
     */
    setupGlobalHandlers() {
        // HTML„ÅÆonclick„Åã„ÇâÂëº„Å≥Âá∫„Åï„Çå„Çã„Ç∞„É≠„Éº„Éê„É´Èñ¢Êï∞
        window.handleRideButtonClick = (docId, action) => {
            if (this.robotService) {
                this.handleRideButtonClick(docId, action);
            } else {
                console.error("‚ùå RobotService„ÅåÂàùÊúüÂåñ„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì");
                this.showNotification("„Ç∑„Çπ„ÉÜ„É†„ÅåÂàùÊúüÂåñ‰∏≠„Åß„Åô„ÄÇ„Åó„Å∞„Çâ„Åè„ÅäÂæÖ„Å°„Åè„Å†„Åï„ÅÑ„ÄÇ", "warning");
            }
        };

        window.handleCallRobotClick = (lat, lng) => {
            if (this.robotService) {
                this.handleCallRobotClick(lat, lng);
            } else {
                console.error("‚ùå RobotService„ÅåÂàùÊúüÂåñ„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì");
                this.showNotification("„Ç∑„Çπ„ÉÜ„É†„ÅåÂàùÊúüÂåñ‰∏≠„Åß„Åô„ÄÇ„Åó„Å∞„Çâ„Åè„ÅäÂæÖ„Å°„Åè„Å†„Åï„ÅÑ„ÄÇ", "warning");
            }
        };

        window.handleSetDestinationClick = (robotDocId, lat, lng) => {
            if (this.robotService) {
                this.handleSetDestinationClick(robotDocId, lat, lng);
            } else {
                console.error("‚ùå RobotService„ÅåÂàùÊúüÂåñ„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì");
                this.showNotification("„Ç∑„Çπ„ÉÜ„É†„ÅåÂàùÊúüÂåñ‰∏≠„Åß„Åô„ÄÇ„Åó„Å∞„Çâ„Åè„ÅäÂæÖ„Å°„Åè„Å†„Åï„ÅÑ„ÄÇ", "warning");
            }
        };

        console.log("‚úÖ „Ç∞„É≠„Éº„Éê„É´„Éè„É≥„Éâ„É©„Éº„ÇíË®≠ÂÆö„Åó„Åæ„Åó„Åü");
    }

    /**
     * ‰πóËªä/ÈôçËªä„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØÂá¶ÁêÜ
     * @param {string} docId - „Éâ„Ç≠„É•„É°„É≥„ÉàID
     * @param {string} action - 'ride' „Åæ„Åü„ÅØ 'getoff'
     */
    async handleRideButtonClick(docId, action) {
        try {
            console.log(`üé´ ${action === 'ride' ? '‰πóËªä' : 'ÈôçËªä'}Âá¶ÁêÜÈñãÂßã: ${docId}`);
            
            await this.robotService.handleRideAction(docId, action);
            
            // Âá¶ÁêÜÊàêÂäüÂæå„ÅÆËøΩÂä†„É°„ÉÉ„Çª„Éº„Ç∏
            if (action === 'ride') {
                // ‰πóËªäÊôÇ„ÅÆ„Ç¨„Ç§„ÉÄ„É≥„Çπ
                setTimeout(() => {
                    this.showNotification(
                        "Âú∞Âõ≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶ÁõÆÁöÑÂú∞„ÇíË®≠ÂÆö„Åó„Å¶„Åè„Å†„Åï„ÅÑ", 
                        "info", 
                        3000
                    );
                }, 1000);
            }
            
        } catch (error) {
            console.error("‚ùå ‰πóËªä/ÈôçËªäÂá¶ÁêÜ„Ç®„É©„Éº:", error);
            this.showNotification("Êìç‰Ωú„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇÂÜçÂ∫¶„ÅäË©¶„Åó„Åè„Å†„Åï„ÅÑ„ÄÇ", "error");
        }
    }

    /**
     * „É≠„Éú„ÉÉ„ÉàÂëº„Å≥Âá∫„Åó„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØÂá¶ÁêÜ
     * @param {number} lat - Á∑ØÂ∫¶
     * @param {number} lng - ÁµåÂ∫¶
     */
    async handleCallRobotClick(lat, lng) {
        try {
            console.log(`üìû „É≠„Éú„ÉÉ„ÉàÂëº„Å≥Âá∫„Åó: (${lat.toFixed(6)}, ${lng.toFixed(6)})`);
            
            // „É≠„Éº„Éá„Ç£„É≥„Ç∞Ë°®Á§∫
            const loadingId = this.showNotification('„É≠„Éú„ÉÉ„Éà„ÇíÂëº„Çì„Åß„ÅÑ„Åæ„Åô...', "loading");
            
            await this.robotService.callRobot(lat, lng);
            
            // „É≠„Éº„Éá„Ç£„É≥„Ç∞ÂâäÈô§
            this.removeNotification(loadingId);
            
        } catch (error) {
            console.error("‚ùå ÈÖçËªäÂá¶ÁêÜ„Ç®„É©„Éº:", error);
            this.showNotification("ÈÖçËªä„É™„ÇØ„Ç®„Çπ„Éà„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ", "error");
        }
    }

    /**
     * ÁõÆÁöÑÂú∞Ë®≠ÂÆö„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØÂá¶ÁêÜ
     * @param {string} robotDocId - „É≠„Éú„ÉÉ„Éà„ÅÆ„Éâ„Ç≠„É•„É°„É≥„ÉàID
     * @param {number} lat - Á∑ØÂ∫¶
     * @param {number} lng - ÁµåÂ∫¶
     */
    async handleSetDestinationClick(robotDocId, lat, lng) {
        try {
            console.log(`üéØ ÁõÆÁöÑÂú∞Ë®≠ÂÆö: ${robotDocId} ‚Üí (${lat.toFixed(6)}, ${lng.toFixed(6)})`);
            
            // „É≠„Éº„Éá„Ç£„É≥„Ç∞Ë°®Á§∫
            const loadingId = this.showNotification('ÁµåË∑Ø„ÇíË®àÁÆó„Åó„Å¶„ÅÑ„Åæ„Åô...', "loading");
            
            await this.robotService.setDestination(robotDocId, lat, lng);
            
            // „É≠„Éº„Éá„Ç£„É≥„Ç∞ÂâäÈô§
            this.removeNotification(loadingId);
            
        } catch (error) {
            console.error("‚ùå ÁõÆÁöÑÂú∞Ë®≠ÂÆö„Ç®„É©„Éº:", error);
            this.showNotification("ÁõÆÁöÑÂú∞„ÅÆË®≠ÂÆö„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ", "error");
        }
    }

    /**
     * Âú∞Âõ≥„ÇØ„É™„ÉÉ„ÇØÊôÇ„ÅÆÂá¶ÁêÜ
     * @param {google.maps.LatLng} location - „ÇØ„É™„ÉÉ„ÇØ‰ΩçÁΩÆ
     */
    async handleMapClick(location) {
        try {
            if (!this.robotService) {
                this.showNotification("„Ç∑„Çπ„ÉÜ„É†„ÅåÂàùÊúüÂåñ‰∏≠„Åß„Åô„ÄÇ„Åó„Å∞„Çâ„Åè„ÅäÂæÖ„Å°„Åè„Å†„Åï„ÅÑ„ÄÇ", "warning");
                return;
            }

            // ‰ΩøÁî®‰∏≠„ÅÆ„É≠„Éú„ÉÉ„Éà„ÇíÁ¢∫Ë™ç
            const inUseRobot = await this.robotService.getInUseRobot();

            if (inUseRobot) {
                // ‰ΩøÁî®‰∏≠„ÅÆ„É≠„Éú„ÉÉ„Éà„Åå„ÅÑ„ÇãÂ†¥Âêà ‚Üí ÁõÆÁöÑÂú∞Ë®≠ÂÆö„É¢„Éº„Éâ
                console.log("üìç ÁõÆÁöÑÂú∞Ë®≠ÂÆö„É¢„Éº„Éâ");
                this.mapService.placeDestinationMarker(location, inUseRobot.id);
            } else {
                // ‰ΩøÁî®‰∏≠„ÅÆ„É≠„Éú„ÉÉ„Éà„Åå„ÅÑ„Å™„ÅÑÂ†¥Âêà ‚Üí ÈÖçËªä„É™„ÇØ„Ç®„Çπ„Éà„É¢„Éº„Éâ
                console.log("üìç ÈÖçËªä„É™„ÇØ„Ç®„Çπ„Éà„É¢„Éº„Éâ");
                this.mapService.placePickupMarker(location);
            }
            
        } catch (error) {
            console.error("‚ùå Âú∞Âõ≥„ÇØ„É™„ÉÉ„ÇØÂá¶ÁêÜ„Ç®„É©„Éº:", error);
            this.showNotification("Êìç‰Ωú„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ", "error");
        }
    }

    /**
     * ÈÄöÁü•„ÇíË°®Á§∫ÔºàÊîπÂñÑÁâàÔºâ
     * @param {string} message - „É°„ÉÉ„Çª„Éº„Ç∏
     * @param {string} type - „Çø„Ç§„Éó ('success', 'error', 'warning', 'info', 'loading')
     * @param {number} duration - Ë°®Á§∫ÊôÇÈñìÔºà„Éü„É™Áßí„ÄÅ0„ÅßËá™ÂãïÂâäÈô§„Å™„ÅóÔºâ
     * @returns {string} ÈÄöÁü•ID
     */
    showNotification(message, type = 'info', duration = 3000) {
        const container = document.getElementById('notification-container');
        if (!container) {
            console.error("‚ùå ÈÄöÁü•„Ç≥„É≥„ÉÜ„Éä„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì");
            return null;
        }

        // ÈÄöÁü•Ë¶ÅÁ¥†„Çí‰ΩúÊàê
        const notificationId = `notification-${Date.now()}-${Math.random()}`;
        const notification = this.createNotificationElement(message, type, notificationId);
        
        container.appendChild(notification);

        // „Éï„Çß„Éº„Éâ„Ç§„É≥ÂäπÊûú
        setTimeout(() => {
            notification.classList.add('notification-show');
        }, 10);

        // Ëá™ÂãïÂâäÈô§Ôºàloading„Çø„Ç§„Éó„Å®duration=0„ÅØÈô§„ÅèÔºâ
        if (type !== 'loading' && duration > 0) {
            setTimeout(() => {
                this.removeNotification(notificationId);
            }, duration);
        }

        return notificationId;
    }

    /**
     * ÈÄöÁü•Ë¶ÅÁ¥†„Çí‰ΩúÊàê
     * @param {string} message - „É°„ÉÉ„Çª„Éº„Ç∏
     * @param {string} type - „Çø„Ç§„Éó
     * @param {string} id - ÈÄöÁü•ID
     * @returns {HTMLElement} ÈÄöÁü•Ë¶ÅÁ¥†
     */
    createNotificationElement(message, type, id) {
        const notification = document.createElement('div');
        notification.id = id;
        notification.className = 'notification';
        
        // „Çø„Ç§„Éó„Å´Âøú„Åò„Åü„Çπ„Çø„Ç§„É´
        const styles = {
            success: 'bg-green-500 text-white',
            error: 'bg-red-500 text-white',
            warning: 'bg-yellow-500 text-white',
            info: 'bg-blue-500 text-white',
            loading: 'bg-gray-700 text-white'
        };
        
        // „Ç¢„Ç§„Ç≥„É≥
        const icons = {
            success: '‚úÖ',
            error: '‚ùå',
            warning: '‚ö†Ô∏è',
            info: '‚ÑπÔ∏è',
            loading: '‚è≥'
        };
        
        const styleClass = styles[type] || styles.info;
        const icon = icons[type] || icons.info;
        
        notification.className = `notification px-4 py-3 rounded-lg shadow-lg ${styleClass} flex items-center gap-2 min-w-[250px] max-w-[400px] transform transition-all duration-300 opacity-0 translate-x-full`;
        
        notification.innerHTML = `
            <span class="text-lg">${icon}</span>
            <span class="flex-1">${message}</span>
            ${type !== 'loading' ? '<button class="notification-close ml-2 text-white hover:text-gray-200">√ó</button>' : ''}
        `;
        
        // Èñâ„Åò„Çã„Éú„Çø„É≥„ÅÆ„Ç§„Éô„É≥„Éà
        const closeBtn = notification.querySelector('.notification-close');
        if (closeBtn) {
            closeBtn.addEventListener('click', () => {
                this.removeNotification(id);
            });
        }
        
        return notification;
    }

    /**
     * ÈÄöÁü•„ÇíÂâäÈô§
     * @param {string} notificationId - ÈÄöÁü•ID
     */
    removeNotification(notificationId) {
        const notification = document.getElementById(notificationId);
        if (!notification) return;
        
        // „Éï„Çß„Éº„Éâ„Ç¢„Ç¶„ÉàÂäπÊûú
        notification.classList.remove('notification-show');
        notification.classList.add('opacity-0', 'translate-x-full');
        
        // DOM „Åã„ÇâÂâäÈô§
        setTimeout(() => {
            if (notification.parentNode) {
                notification.parentNode.removeChild(notification);
            }
        }, 300);
    }

    /**
     * „Åô„Åπ„Å¶„ÅÆÈÄöÁü•„ÇíÂâäÈô§
     */
    clearAllNotifications() {
        const container = document.getElementById('notification-container');
        if (container) {
            container.innerHTML = '';
        }
    }

    /**
     * „Éá„Éê„ÉÉ„Ç∞ÊÉÖÂ†±„ÇíË°®Á§∫
     */
    showDebugInfo() {
        console.log('=== UIService Debug Info ===');
        console.log('RobotService:', this.robotService ? '‚úÖ Connected' : '‚ùå Not Connected');
        console.log('MapService:', this.mapService ? '‚úÖ Connected' : '‚ùå Not Connected');
        console.log('Active Markers:', this.mapService ? Object.keys(this.mapService.activeMarkers).length : 0);
        console.log('User Marker:', this.mapService?.userMarker ? '‚úÖ Present' : '‚ùå None');
        console.log('Map Initialized:', this.mapService?.map ? '‚úÖ Yes' : '‚ùå No');
        console.log('=== End Debug Info ===');
    }

    /**
     * „Ç∑„Çπ„ÉÜ„É†„Çπ„ÉÜ„Éº„Çø„Çπ„ÇíÁîªÈù¢„Å´Ë°®Á§∫Ôºà„Éá„Éê„ÉÉ„Ç∞Áî®Ôºâ
     */
    showSystemStatus() {
        const status = {
            robotService: !!this.robotService,
            mapService: !!this.mapService,
            activeMarkers: this.mapService ? Object.keys(this.mapService.activeMarkers).length : 0,
            userMarker: this.mapService?.userMarker ? 'Present' : 'None',
            mapInitialized: this.mapService?.map ? 'Yes' : 'No'
        };
        
        const statusHtml = `
            <div style="position: fixed; bottom: 10px; left: 10px; background: rgba(0,0,0,0.8); color: white; padding: 10px; border-radius: 5px; font-family: monospace; font-size: 12px; z-index: 9999;">
                <strong>System Status</strong><br>
                RobotService: ${status.robotService ? '‚úÖ' : '‚ùå'}<br>
                MapService: ${status.mapService ? '‚úÖ' : '‚ùå'}<br>
                Active Markers: ${status.activeMarkers}<br>
                User Marker: ${status.userMarker}<br>
                Map: ${status.mapInitialized}
            </div>
        `;
        
        let statusDiv = document.getElementById('system-status-display');
        if (!statusDiv) {
            statusDiv = document.createElement('div');
            statusDiv.id = 'system-status-display';
            document.body.appendChild(statusDiv);
        }
        statusDiv.innerHTML = statusHtml;
        
        // 5ÁßíÂæå„Å´Ëá™ÂãïÂâäÈô§
        setTimeout(() => {
            const div = document.getElementById('system-status-display');
            if (div) div.remove();
        }, 5000);
    }

    /**
     * „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„ÉóÂá¶ÁêÜ
     */
    cleanup() {
        console.log("üßπ UIService „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„Éó‰∏≠...");
        
        // ÈÄöÁü•„Çí„ÇØ„É™„Ç¢
        this.clearAllNotifications();
        
        // ÈÄöÁü•„Ç≥„É≥„ÉÜ„Éä„ÇíÂâäÈô§
        const container = document.getElementById('notification-container');
        if (container) {
            container.remove();
        }
        
        // „Ç∞„É≠„Éº„Éê„É´Èñ¢Êï∞„ÇíÂâäÈô§
        delete window.handleRideButtonClick;
        delete window.handleCallRobotClick;
        delete window.handleSetDestinationClick;
        
        console.log("‚úÖ UIService „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„ÉóÂÆå‰∫Ü");
    }
}